setwd("C:/Users/Administrator/Desktop")
#####单因素方差分析
#导入SPSS格式的数据
library(Hmisc)
mydata <- spss.get('NO.24 配套数据.sav',
use.value.labels = TRUE)
View(mydata)
#1、正态性检验
tapply(mydata[,3],
mydata[,2],
shapiro.test)
install.packages("car")
#2、判断组间的方差齐性
#方差齐性检验使用的是car程序包中的leveneTest函数
library(car)
#leveneTest(被检验变量~分组变量)
leveneTest(mydata$胃半排空时间~mydata$分组)
leveneTest(mydata$胃半排空时间,mydata$分组)
#3、单因素方差分析
#单因素方差分析使用的函数是oneway.test
oneway.test(mydata$胃半排空时间~mydata$分组,
var.equal = TRUE)
#3、单因素方差分析
#单因素方差分析使用的函数是oneway.test
res1 <- oneway.test(mydata$胃半排空时间~mydata$分组,
var.equal = TRUE)
res1
install.packages("PMCMRplus")
#4、两两比较（基于方差齐）
#两两比较需要用到的程序包是PMCMRplus
#PMCMRplus程序包既可以实现方差齐的两两比较
#也可以实现方差不齐的两两比较
library(PMCMRplus)
lsdTest(mydata$胃半排空时间~mydata$分组)
0.95*0.95*0.95
lsdTest(mydata$胃半排空时间~mydata$分组,p.adjust('bonfferoni'))
lsdTest(mydata$胃半排空时间~mydata$分组,bonfferoni)
lsdTest(mydata$胃半排空时间~mydata$分组,'bonfferoni')
#3、单因素方差分析
#单因素方差分析使用的函数是oneway.test
res1 <- oneway.test(mydata$胃半排空时间~mydata$分组,
var.equal = TRUE)
res1
adAllPairsTest(mydata$胃半排空时间~mydata$分组,p.adjust.method = 'bonferroni')
lsdTest(mydata$胃半排空时间~mydata$分组,p.adjust.method = 'bonferroni')
lsdTest(mydata$胃半排空时间~mydata$分组,p.adjust = 'bonferroni')
lsdTest(mydata$胃半排空时间~mydata$分组)
lsdTest(mydata$胃半排空时间~mydata$分组)
lsdTest(mydata$胃半排空时间~mydata$分组)
lsdTest(mydata$胃半排空时间~mydata$分组)
mul <- lsdTest(mydata$胃半排空时间~mydata$分组)
padj <- p.adjust(mul, method = 'bonferroni')
mul$p.value
padj <- p.adjust(mul$p.value, method = 'bonferroni')
padj
res1 <- oneway.test(mydata$胃半排空时间~mydata$分组,
var.equal = TRUE)
res1
lsdTest(mydata$胃半排空时间~mydata$分组)
0.95*0.95*0.95
mul <- lsdTest(mydata$胃半排空时间~mydata$分组)
mul$p.value
p.adjust(mul$p.value, method = 'bonfferoni')
p.adjust(mul$p.value, method = 'bonferroni')
res1 <- oneway.test(mydata$胃半排空时间~mydata$分组,
var.equal = TRUE)
res1
lsdTest(mydata$胃半排空时间~mydata$分组)
0.95*0.95*0.95
mul <- lsdTest(mydata$胃半排空时间~mydata$分组)
mul$p.value
padj <- p.adjust(mul$p.value, method = 'bonferroni')
padj
#溃疡样型和动力障碍样型 、非特异性型之间的胃半排空时间时间
#存在显著差异；而动力障碍样型和非特异性型之间
#无显著差异，P>0.05
#更进一步结合均值
aggregate(x=list(mydata[,3]),
by = list(mydata[,2]),
FUN = mean)
#多变量的单因素方差
#1、正态性检验
for(i in 3:8){
print(tapply(mydata[,i],
mydata[,2],
shapiro.test))
}
print(colnames(mydata)[3:8])
#多变量的单因素方差
#1、正态性检验
for(i in 3:8){
print(colnames(mydata)[3:8])
print(tapply(mydata[,i],
mydata[,2],
shapiro.test))
}
#多变量的单因素方差
#1、正态性检验
for(i in 3:8){
print(colnames(mydata)[i])
print(tapply(mydata[,i],
mydata[,2],
shapiro.test))
}
print(colnames(mydata)[3:5])
#2、描述性统计分析
均值标准差 <- functin(x){
均值标准差 <- function(x){
paste0(round(mean(x),2),'±',round(sd(x),2))
}
res2 <- aggregate(x=list(mydata[,3:5]),
by = list(mydata[,2]),
FUN = 均值标准差)
View(res2)
write.csv(res2,'res2.csv')
for(i in 3:5){
print(leveneTest(mydata[,i]~mydata[,2]))
}
for(i in 3:5){
print(colnames(mydata)[i])
print(leveneTest(mydata[,i]~mydata[,2]))
}
oneway.test(mydata$胃半排空时间~mydata$分组,
var.equal = TRUE)
oneway.test(mydata$NO~mydata$分组,
var.equal = TRUE)
oneway.test(mydata$餐后2小时残留率~mydata$分组,
var.equal = FALSE)
#5、两两比较
res5 <- lsdTest(mydata$NO~mydata$分组)
res5
padj2 <- p.adjust(res5$p.value, method = 'bonferroni')
padj2
padj
#方差不齐的两两比较Tamhane T2两两比较
tamhaneT2Test(mydata$餐后2小时残留率~mydata$分组)
plot(mul)
plot(res5)
plot(res5$p.value)
plot(res5)
plot(res1)
#方差不齐的两两比较Tamhane T2两两比较
tamhaneT2Test(mydata$餐后2小时残留率~mydata$分组)
res5 <- lsdTest(mydata$NO~mydata$分组)
res5
padj2 <- p.adjust(res5$p.value, method = 'bonferroni')
padj2
#方差不齐的两两比较Tamhane T2两两比较
tamhaneT2Test(mydata$餐后2小时残留率~mydata$分组)
save.image("C:/Users/Administrator/Desktop/NO.24 环境.RData")
savehistory("C:/Users/Administrator/Desktop/NO.24 历史")
