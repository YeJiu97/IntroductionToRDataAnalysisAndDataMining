getwd()
getwd()
# R语言的基础运算
age <- c(21, 22.3, 23, 19.8, 22.9, 20)
BMI <- c(20.3, 19.5, 19.8, 21.2, 22.3, 19.6)
student_id <- c("No.1", No.2", No.3", No.4", No.5", No.6")
student_id <- c("No.1", "No.2", "No.3", "No.4", "No.5", "No.6")
# 组成一个datafram
data.frame(student_id, age, BMI)
## 首先是使用 <- 来进行赋值
age <- c(21, 22.3, 23, 19.8, 22.9, 20)
BMI <- c(20.3, 19.5, 19.8, 21.2, 22.3, 19.6)
student_id <- c("No.1", "No.2", "No.3", "No.4", "No.5", "No.6")
# 组成一个datafram
data.frame(student_id, age, BMI)
my.data <- data.frame(student_id, age, BMI)
view(my.data)
# R语言的基础运算
## 首先是使用 <- 来进行赋值
age <- c(21, 22.3, 23, 19.8, 22.9, 20)
BMI <- c(20.3, 19.5, 19.8, 21.2, 22.3, 19.6)
student_id <- c("No.1", "No.2", "No.3", "No.4", "No.5", "No.6")
# 组成一个datafram
data.frame(student_id, age, BMI)
my.data <- data.frame(student_id, age, BMI)
View(my.data)
View(my.data)
View(my.data)
View(my.data)
View(my.data)
## 四则运算
2 + 3
2 - 3
4 * 6
7 / 9
## 其他运算
3 %% 2  # 整除求余
3 ^ 2  # 乘方运算
## 其他运算
3 %% 2  # 整除求余
3 ^ 2  # 乘方运算
5 %/% 2  # 整除求商
## 处理小数部分
ceiling(6.4)
floor(6.4)
5 ^ 2
5 ** 2
## 平方根
sqrt(25)
## 三角函数
sin(10)
## 三角函数
sin(pi, 180 * 30)
cos(pi, 180 * 30)
tan(pi, 180 * 30)
## 三角函数
sin(pi/ 180 * 30)
cos(pi/ 180 * 30)
tan(pi/ 180 * 30)
## 对数函数，log(x, base = 10)
log(100, base = 10)  # 10的几次方是100
log(64, base = 8)  # 8的几次方是64
log(128, base - 2)  # 2的几次方是128
## 对数函数，log(x, base = 10)
log(100, base = 10)  # 10的几次方是100
log(64, base = 8)  # 8的几次方是64
log(128, base = 2)  # 2的几次方是128
log(e)
log(exp(1))
exp(1)
log(exp)
log(exp(1))
exp(1)
log(exp(1))
## 简单的统计运算
my.data
## 简单的统计运算
my.data
mean(my.data$age)  # 求取age这个变量的平均值
sd(my.data$age)  # 求取age这个变量的standard deviation
var(my.data$age)  # 求取age这个变量的方差
range(my.data$age)  # 求取age这个变量的范围
## 简单的统计运算
my.data
mean(my.data$age)  # 求取age这个变量的平均值
sd(my.data$age)  # 求取age这个变量的standard deviation
var(my.data$age)  # 求取age这个变量的方差
range(my.data$age)  # 求取age这个变量的范围
median(my.data$age)  # 求取age这个变量的中位数median
quantile(my.data$age)  # 求取age这个变量的四分位情况
max(my.data$age)  # age的最大值
min(my.data$age)  # age的最小值
## 绝对值与四舍五入
abs(-10)
round(pi, 2)
## 绝对值与四舍五入
abs(-10)
abs(5)
pi
round(pi, 2)
## 且，或，非
TRUE & FALSE
## 且，或，非
TRUE & FALSE
TRUE | FALSE
!TRUE
# 数据类型
## 向量
age
BMI
typeof(age)
type(age)
BMI
## 逻辑向量
logical_vecctor <- c(TRUE, FALSE, TRUE, FALSE)
logical_vecctor
# 或者可以这样
ifelse(BMI > 20, TRUE)
# 或者可以这样
ifelse(BMI > 20, TRUE, FALSE)  # 如果大于则为TRUE，反之则为FALSE
## 逻辑向量
logical_vecctor <- c(TRUE, FALSE, TRUE, FALSE)
logical_vecctor
# 或者可以这样
ifelse(BMI > 20, TRUE, FALSE)  # 如果大于则为TRUE，反之则为FALSE
## 数据框
gender <- c("female", "male", "female", "female", "male", "male")
## 数据框
gender <- c("female", "male", "female", "female", "male", "male")
selected <- ifelse(BMI > 20, TRUE, FALSE)
my.data <- data.frame(my.data, gender, selected)
my.data
## 数据框的调用
my.datap[4]
## 数据框的调用
my.data[4]
## 数据框的调用
my.data[4, “"selected"”]
## 数据框的调用
my.data[4, “selected"]
## 数据框的调用
my.data[4, "selected"]
## 数据框的调用
my.data[4, 5]  # 数据框中第4行第5列
my.data[4, ]  # 数据框第4行所有数据
my,data[, 5]  # 数据框第5行所有数据
my.data[, 5]  # 数据框第5行所有数据
my.data["age", ]  # 数据框的age这一列的所有数据
my.data[, "age"]  # 数据框的age这一列的所有数据
my.data$age  # 或者也可以这么做
my.data[1, ]  # 这是第一行
my.data[-1, ]  # 这是不包括第一行
my.data[c(-1, -3), ]  # 这是不包括第一行和第三行
my.data[c(1, 3, 5), ]  # 这是只包括第一行，第三行和第五行
my.data[4, 5]  # 数据框中第4行第5列
my.data[4, ]  # 数据框第4行所有数据
my.data[, 5]  # 数据框第5列所有数据
my.data[, "age"]  # 数据框的age这一列的所有数据
my.data$age  # 或者也可以这么做
my.data[1, ]  # 这是第一行
my.data[-1, ]  # 这是不包括第一行
my.data[c(-1, -3), ]  # 这是不包括第一行和第三行
my.data[c(1, 3, 5), ]  # 这是只包括第一行，第三行和第五行
## 生成数据框
matrix(1:30, nrow = 5, ncol = 6)
# 列
list(mydata, a, gender, selected)
# 列
list(my.data, a, gender, selected)
# 列
list(my.data, gender, selected)
# 列
list(my.data, gender, selected)
# 列
list_01 <- list(my.data, gender, selected)
list_01
list_01[1]
list_01[1][1, ]
list_01[1][ , ]
list_01[1]
list_01[[1]]
list_01[[1]][, 1]
# 列
list_01 <- list(my.data, gender, selected)
list_01
list_01[1]
list_01[[1]]
list_01[[1]][, 1]
